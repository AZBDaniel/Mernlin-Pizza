{"version":3,"sources":["assets/spinner.gif","components/Images/orderNowButton.png","components/Images/MERNlinLogo.png","utils/helpers.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","components/ProductList/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","components/Jumbotron/index.js","pages/Home.js","pages/Detail.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/ContactUs.js","pages/Success.js","pages/OrderHistory.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","reducer","state","action","type","products","cartOpen","cart","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","ProductItem","item","image","name","price","quantity","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","key","spinner","CartItem","placeholder","onChange","target","role","aria-label","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","submitCheckout","productIds","i","push","variables","res","redirectToCheckout","sessionId","checkout","session","a","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","OrderButton","Jumbotron","children","style","height","clear","paddingTop","textAlign","Home","Detail","id","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","categoryData","handleClick","MERNlinLogo","href","logout","ContactForm","company","phoneNumber","city","message","errorMessage","setErrorMessage","isValid","test","String","toLowerCase","validateEmail","data-testid","defaultValue","onBlur","rows","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","Footer","client","ApolloClient","operation","setContext","headers","authorization","uri","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7266641d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","module.exports = __webpack_public_path__ + \"static/media/orderNowButton.f4eb4268.png\";","module.exports = __webpack_public_path__ + \"static/media/MERNlinLogo.9642e916.png\";","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} per order</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import gql from 'graphql-tag';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n{\n  categories {\n    _id\n    name\n  }\n}\n`;\n\nexport const QUERY_USER = gql`\n{\n  user {\n    firstName\n    lastName\n    orders {\n      _id\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        image\n      }\n    }\n  }\n}\n`;","import React, { useEffect } from \"react\";\nimport ProductItem from \"../ProductItem\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport spinner from \"../../assets/spinner.gif\"\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n\n          type: UPDATE_PRODUCTS,\n          products: data.products\n        });\n        data.products.forEach((product) => {\n          idbPromise('products', 'put', product);\n        });\n\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map(product => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ?\n        <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport OrderButton from '../Images/orderNowButton.png';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_USER } from '../../utils/queries';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    // const userData = useQuery(QUERY_USER);\n    let sum = 0;\n    const userData = 1;\n    state.cart.forEach((item) => {\n      if (userData === null) {\n        sum += (item.price / 100) * 80 * item.purchaseQuantity;\n      } else {\n        sum += item.price * item.purchaseQuantity;\n      }\n    });\n    return sum.toFixed(2);\n  }\n\n  // function calculateTotal() {\n  //   const { data } = useQuery(QUERY_USER);\n  //   let sum;\n  //   if (data) {\n  //     state.cart.forEach((item) => {\n  //       sum += (item.price / 100) * 80 * item.purchaseQuantity;\n  //     });\n  //   } else {\n  //     state.cart.forEach((item) => {\n  //       sum += (item.price / 100) * 20 * item.purchaseQuantity;\n  //     });\n  //   }\n\n  //   return sum.toFixed(2);\n  // }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <img src={OrderButton} alt=\"OrderButton\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <div>\n                <button onClick={submitCheckout}>Checkout</button>\n                <span>(SignUp to get 20% discount)</span>\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>Your cart is empty</h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n      <h1>Hello</h1>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport Cart from \"../components/Cart\";\nimport { useStoreContext } from '../utils/GlobalState';\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst Home = () => {\n\n  const [state, dispatch] = useStoreContext();\n\n  return (\n    <div className=\"container backgroundImage\">\n      {console.log(state)}\n      {state.currentCategory === \"\"? <Jumbotron />:<ProductList /> }\n\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from '@apollo/react-hooks';\n\nimport Cart from \"../components/Cart\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from \"../utils/actions\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from '../assets/spinner.gif'\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } \n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n\n    }\n  }\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">\n            ← Back to Products\n          </Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>\n            {currentProduct.description}\n          </p>\n\n          <p>\n            <strong>Price:</strong>\n            ${currentProduct.price}\n            {\" \"}\n            <button onClick={addToCart}>\n              Add to Cart\n            </button>\n            <button \n              disabled={!cart.find(p => p._id === currentProduct._id)} \n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {\n        loading ? <img src={spinner} alt=\"loading\" /> : null\n      }\n      <Cart />\n    </>\n  );\n};\n\nexport default Detail;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      } \n      }\n    }\n  }\n`;\n\n\nexport const ADD_USER = gql`\n  mutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\n    addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;","import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\"\nimport Auth from \"../utils/auth\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' })\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e)\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <Link to=\"/signup\">\n        ← Go to Signup\n      </Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {\n          error ? <div>\n            <p className=\"error-text\" >The provided credentials are incorrect</p>\n          </div> : null\n        }\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email, password: formState.password,\n        firstName: formState.firstName, lastName: formState.lastName\n      }\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <Link to=\"/login\">\n        ← Go to Login\n      </Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n\n}\n\nexport default Signup;\n","import React, { useEffect } from 'react';\nimport MERNlinLogo from '../Images/MERNlinLogo.png';\nimport OrderButton from '../Images/orderNowButton.png';\nimport Auth from '../../utils/auth';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nimport './style.css';\n\nfunction Nav() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/OrderHistory\" className=\"orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"logOut\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Log Out\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <div>\n          <Link to=\"/signup\" className=\"signUp\">\n            <span>Sign Up</span>\n          </Link>\n          <Link to=\"/login\" className=\"logIn\">\n            <span>Log In</span>\n          </Link>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbarContainer\">\n        <div className=\"resName\">\n          <div id=\"resNameMERNlin\">\n            <span>MERNlin's</span>\n          </div>\n          <div id=\"resNamePizza\">\n            <span>Pizza</span>\n          </div>\n        </div>\n        <div className=\"yellowBar\">\n          <Link to=\"/\" className=\"logoCircle\">\n            <img src={MERNlinLogo} alt=\"MERNLinLogo\" />\n          </Link>\n          <div className=\"navbarLeft\">\n            <button\n              onClick={() => {\n                handleClick('');\n              }}\n            >\n              <Link to=\"/\" className=\"navLinks\">\n                Home\n              </Link>\n            </button>\n            <h2></h2>\n            {categories.map((item) => (\n              <button\n                key={item._id}\n                onClick={() => {\n                  handleClick(item._id);\n                }}\n              >\n                <Link className=\"navLink\" to=\"/\">\n                  {item.name}\n                </Link>\n              </button>\n            ))}\n            <button>\n              <Link to=\"/ContactUs\" className=\"navLinks\">\n                Contact\n              </Link>\n            </button>\n            <button>About Us</button>\n          </div>\n        </div>\n      </div>\n      {showNavigation()}\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React, { useState } from 'react';\n\nimport { validateEmail } from '../utils/helpers';\n\nfunction ContactForm() {\n    const [formState, setFormState] = useState({ name: '', company: '', email: '', phoneNumber: '', city: '', state: '', message: '' });\n  \n    const [errorMessage, setErrorMessage] = useState('');\n    const { name, company, email, phoneNumber, city, state, message } = formState;\n  \n    const handleSubmit = (e) => {\n      e.preventDefault();\n      if (!errorMessage) {\n        console.log('Submit Form', formState);\n      }\n    };\n  \n    const handleChange = (e) => {\n      if (e.target.name === 'email') {\n        const isValid = validateEmail(e.target.value);\n        if (!isValid) {\n          setErrorMessage('Your email is invalid.');\n        } else {\n          setErrorMessage('');\n        }\n      } else {\n        if (!e.target.value.length) {\n          setErrorMessage(`${e.target.name} is required.`);\n        } else {\n          setErrorMessage('');\n        }\n      }\n      if (!errorMessage) {\n        setFormState({ ...formState, [e.target.name]: e.target.value });\n        console.log('Handle Form', formState);\n      }\n    };\n  \n    return (\n        <div className=\"container\">\n      <section>\n        <h1 data-testid=\"h1tag\">Contact me</h1>\n        <form id=\"contact-form\" onSubmit={handleSubmit}>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"name\">Name:</label>\n            <input type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"company\">Company:</label>\n            <input type=\"text\" name=\"company\" defaultValue={company} onBlur={handleChange} />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"email\">Email address:</label>\n            <input type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"phoneNumber\">Phone #:</label>\n            <input type=\"number\" name=\"phoneNumber\" defaultValue={phoneNumber} onBlur={handleChange} />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"city\">City:</label>\n            <input type=\"text\" name=\"city\" defaultValue={city} onBlur={handleChange} />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"state\">State:</label>\n            <input type=\"text\" name=\"state\" defaultValue={state} onBlur={handleChange} />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"message\">Message:</label>\n            <textarea name=\"message\" rows=\"5\" defaultValue={message} onBlur={handleChange} />\n          </div>\n          {errorMessage && (\n            <div>\n              <p className=\"error-text\">{errorMessage}</p>\n            </div>\n          )}\n          <button data-testid=\"button\" type=\"submit\">Submit</button>\n        </form>\n      </section>\n      </div>\n    );\n  }\n  \n  export default ContactForm;","import React, { useEffect } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Jumbotron from \"../components/Jumbotron\";\nimport { ADD_ORDER } from \"../utils/mutations\";\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map(item => item._id);\n      \n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n    \n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n        \n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>\n          Thank you for your purchase!\n        </h2>\n        <h2>\n          You will now be redirected to the home page\n        </h2>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : (\n          <div style={{ paddingTop: 500 }}>'Heloooooooo you!!!!!'</div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react'\nimport './style.css'\n\nconst Footer = () => {\n    return (\n        <div className=\"mainFooter\">\n            <div className=\"footerContainer\">\n                <div className=\"row\">\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\n\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\nimport { StoreProvider } from \"./utils/GlobalState\";\nimport ContactForm from \"./pages/ContactUs\";\nimport Success from \"./pages/Success\";\nimport OrderHistory from \"./pages/OrderHistory\";\nimport Footer from \"./components/Footer/Footer\";\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem('id_token')\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    })\n  },\n  uri: '/graphql',\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/contactUs\" component={ContactForm} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n          </StoreProvider>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}